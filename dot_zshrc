zstyle ':zim:zmodule' use 'degit'

ZIM_HOME=${HOME}/.config/zim
zstyle ':zim:completion' dumpfile "${ZIM_HOME}/zcompdump"
zstyle ':completion::complete:*' cache-path "${ZIM_HOME}/zcompcache"

if [[ ! -e ${ZIM_HOME}/zimfw.zsh ]]; then
  curl -fsSL --create-dirs -o ${ZIM_HOME}/zimfw.zsh \
    https://github.com/zimfw/zimfw/releases/latest/download/zimfw.zsh
fi

if [[ ! ${ZIM_HOME}/init.zsh -nt ${ZDOTDIR:-${HOME}}/.zimrc ]]; then
  source ${ZIM_HOME}/zimfw.zsh init -q
fi

export ZIM_COMP=${ZIM_HOME}/completions
mkdir -p ${ZIM_COMP}
fpath=("${fpath[@]}"
  $ZIM_COMP
)

export WORDCHARS=${WORDCHARS/\//}
export PATH=${HOME}/.local/bin:$PATH

# zsh config
setopt globdots
bindkey -s '\e\e' '\C-asudo \C-e'
bindkey '^[[1;5C' forward-word
bindkey '^[[1;5D' backward-word

if [[ -n "${terminfo[kcuu1]}" ]]; then
  autoload -U up-line-or-beginning-search
  zle -N up-line-or-beginning-search
  bindkey "${terminfo[kcuu1]}" up-line-or-beginning-search
fi

if [[ -n "${terminfo[kcud1]}" ]]; then
  autoload -U down-line-or-beginning-search
  zle -N down-line-or-beginning-search
  bindkey "${terminfo[kcud1]}" down-line-or-beginning-search
fi

# History config
export HISTSIZE=10000000
export SAVEHIST=10000000
export HISTFILE=${ZIM_HOME}/zsh_history

setopt append_history
setopt share_history
setopt hist_expire_dups_first
setopt hist_find_no_dups
setopt hist_save_no_dups
setopt hist_ignore_dups
setopt hist_ignore_all_dups
setopt hist_ignore_space
setopt hist_reduce_blanks
setopt inc_append_history

if [[ "$HEREIS" == "desktop" ]]; then
  alias _deletemydotfiles="echo DANGER"
fi

alias curl="curl -k -s"
alias k="eza -lh"
alias kx="kubectx"
alias kn="kubens"
alias kc="kubectl"
alias y="yarn"
alias yt='yt-dlp -f "bv*+ba" '
alias zz="zimfw clean && zimfw install && zimfw build -v"

# asdf-vm
if command -v asdf >/dev/null 2>&1; then
  export PATH="${ASDF_DATA_DIR:-$HOME/.asdf}/shims:$PATH"
fi

# starship
if command -v starship >/dev/null 2>&1; then
  if [ -n "${XDG_CACHE_HOME}" ]; then
    export STARSHIP_CACHE=${XDG_CACHE_HOME}/starship/
  fi
  eval "$(starship init zsh)"
else
  export PS1="%F{green}%n@%m:%~%F{reset} \$ "
fi

# direnv
if command -v direnv >/dev/null 2>&1; then
  eval "$(direnv hook zsh)"
fi

# fzf in debian
if command -v fzf >/dev/null 2>&1; then
  source /usr/share/doc/fzf/examples/key-bindings.zsh
  source /usr/share/doc/fzf/examples/completion.zsh
fi

# Rust
export RUSTUP_DIST_SERVER="https://rsproxy.cn"
export RUSTUP_UPDATE_ROOT="https://rsproxy.cn/rustup"
export RUSTUP_INIT_SKIP_PATH_CHECK=yes

# conda
export CONDA_HOME=$HOME/.asdf/installs/python/miniconda3-latest
export CONDA_AUTO_ACTIVATE_BASE=false
if [[ -e "$CONDA_HOME/etc/profile.d/conda.sh" ]]; then
  source $CONDA_HOME/etc/profile.d/conda.sh
fi

# init zim
source ${ZIM_HOME}/init.zsh

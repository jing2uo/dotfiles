function chroot2dir() {
  if [ -z "$1" ]; then
    echo "please input target directory, like /mnt"
    return 1
  fi

  DIR=$1

  if ! ls "$DIR" >/dev/null 2>&1; then
    echo "directory $DIR not found"
    return 1
  fi

  sudo mount -t proc /proc $DIR/proc
  sudo mount --rbind /dev $DIR/dev
  sudo mount --make-rslave $DIR/dev
  sudo mount --rbind /sys $DIR/sys
  sudo mount --make-rslave $DIR/sys
  sudo cp /etc/resolv.conf $DIR/etc/resolv.conf
  sudo chroot $DIR
}

function ccc() {
  sudo chmod a+x /usr/local/bin/* /opt/apps/*.appimage
  sudo chown -R root:root /usr/share/applications/opts /usr/local/bin /opt/apps
}

function myfpath() {
  helm completion zsh > $MYFPATH/_helm
  kubectl completion zsh > $MYFPATH/_kubectl
  zellij setup --generate-completion zsh > $MYFPATH/_zellij
  ov --completion zsh > $MYFPATH/_ov
  echo "now"
  ls -l $MYFPATH/
}


function upkernel() {
  if [ -z "$1" ]; then
    echo "please input vmlinuz path, like /boot/vmlinuz-5.10.0-18-amd64"
    return 1
  fi

  vmlinuz_path=$1

  if ! ls "$vmlinuz_path" >/dev/null 2>&1; then
    echo "vmlinuz $vmlinuz_path not found"
    return 1
  fi

  vmlinuz_version=$(echo $1 | sed 's%/boot/vmlinuz-%%g')
  sudo linux-update-symlinks install $vmlinuz_version $vmlinuz_path
  echo "now:"
  ls -lh / | grep -E 'vmlinuz|initrd'
}

function osback() {
  if [ -z "$1" ]; then
    echo "please input device name, like /dev/sdx"
    return 1
  fi

  DEV="$1"

  if ! ls "$DEV" >/dev/null 2>&1; then
    echo "device $DEV not found"
    return 1
  fi

  sudo mount "$DEV" /mnt/
  sudo btrfs subvolume delete /mnt/@osback
  sudo btrfs subvolume snapshot /mnt/@ /mnt/@osback
  echo "now:"
  sudo btrfs subvolume list /mnt
  sudo umount /mnt
}
